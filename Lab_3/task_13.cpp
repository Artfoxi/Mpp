Задание 13: Синхронизация вывода 3
Условие: Решите задачу 11 с использованием условной переменной и минимально необходимого количества мьютексов.
Решение: Мы уже решили задачу 11 с использованием одного мьютекса и одной условной переменной, что является минимально необходимым количеством. Один мьютекс защищает доступ к std::cout и используется для работы с условной переменной, а условная переменная управляет чередованием. Код из предыдущего ответа уже соответствует этому требованию:
●	Один мьютекс (pthread_mutex_t mutex) защищает критическую секцию (std::cout) и используется с условной переменной.
●	Одна условная переменная (pthread_cond_t cond) и флаг (parent_turn) управляют чередованием.
Минимально необходимое количество мьютексов — один, так как нам нужно только защитить общий ресурс (std::cout) и синхронизировать ожидание с помощью условной переменной. Два мьютекса не нужны, так как чередование обеспечивается условной переменной.
Код остается тем же, что был в предыдущем ответе (см. решение задачи 11).
